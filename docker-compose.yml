version: '2'

services:

  dctemplate-ngnix:
    image: ${DOCKRE_REGISTRY}/philiphzh/helloworld:nginx-1.8-alpine
    container_name: dctemplate-ngnix
    volumes:
      - ./config/nginx/conf.d:/etc/nginx/conf.d
      - ./code/nginx:/data/${PROJECT_NAME}/code/nginx
    environment:
      - TZ=Asia/Shanghai
      - PROJECT_NAME=${PROJECT_NAME}
    ports:
     - 80:80
    restart: always
    logging:
      # limit logs retained on host to 25MB
      driver: "json-file"
      options:
        max-size: "500k"
        max-file: "50"
    networks:
      - frontend_network

  dctemplate-springboot:
    image: ${DOCKRE_REGISTRY}/philiphzh/helloworld:8-openjdk-alpine
    container_name: dctemplate-springboot
    restart: "on-failure:3"
    depends_on:
      - dctemplate-mysql
    environment:
      - TZ=Asia/Shanghai
    volumes:
      - ./code/springboot:/data/dctemplate/code/springboot
    entrypoint: java -jar /data/dctemplate/code/springboot/hello-world-0.1.0.jar
    logging:
      # limit logs retained on host to 25MB
      driver: "json-file"
      options:
        max-size: "500k"
        max-file: "50"
    networks:
      - frontend_network
      - default

  dctemplate-tomcat:
    image: ${DOCKRE_REGISTRY}/philiphzh/helloworld:tomcat-jre8-alpine
    container_name: dctemplate-tomcat
    volumes:
      - ./code/tomcat:/usr/local/tomcat/webapps
    environment:
      - TZ=Asia/Shanghai
      - TOMCAT_USERNAME=${TOMCAT_USERNAME}
      - TOMCAT_PASSWORD=${TOMCAT_PASSWORD}
    depends_on:
      - dctemplate-mysql
    logging:
      # limit logs retained on host to 25MB
      driver: "json-file"
      options:
        max-size: "500k"
        max-file: "50"
    networks:
      - frontend_network
      - default

  dctemplate-mysql:
    image: ${DOCKRE_REGISTRY}/philiphzh/helloworld:mysql5.7
    container_name: dctemplate-mysql
    restart: "always"
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - mysql_volume:/var/lib/mysql
      - ./config/mysql_init/:/docker-entrypoint-initdb.d/
      - ./config/mysql_conf/mysqld.cnf:/etc/mysql/mysql.conf.d/mysqld.cnf
    logging:
      # limit logs retained on host to 25MB
      driver: "json-file"
      options:
        max-size: "500k"
        max-file: "50"
    networks:
      default:
        ipv4_address: ${IP_RANGE}.2

  dctemplate-backups:
    image: ${DOCKRE_REGISTRY}/philiphzh/helloworld:volumerize
    environment:
      - TZ=Asia/Shanghai
      - DEBUG=true
      - VOLUMERIZE_SOURCE=/source
      - VOLUMERIZE_TARGET=file:///backup
      - VOLUMERIZE_JOBBER_TIME=* 5 2 * * *
      - VOLUMERIZE_FULL_IF_OLDER_THAN=3D
      - VOLUMERIZE_CONTAINERS=dctemplate-nginx
      - MYSQL_USERNAME=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_HOST=${MYSQL_HOST}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_DUMP_PATH=mysql-backup
      - DAYS_TO_KEEP_OLD_FILE=5
      - 'REMOVE_OLD_FILE_IN_DIR=/source/mysql-backup'
    volumes:
      # volumerize的目录配置
      - /var/run/docker.sock:/var/run/docker.sock
      - cache_volume:/volumerize-cache
      - ./code/backups/preexecute:/preexecute
      # 需要还原的文件
      # mysql备份
      - ./backup/mysql-backup:/source/mysql-backup
    logging:
      # limit logs retained on host to 25MB
      driver: "json-file"
      options:
        max-size: "500k"
        max-file: "50"
    networks:
      - default

volumes:
  cache_volume:
    external: false
  mysql_volume:
    external: false

networks:
  frontend_network:
    external: false
  default:
      driver: bridge
      ipam:
        config:
          - subnet: ${IP_RANGE}.0/24
            ip_range: ${IP_RANGE}.128/25
            gateway: ${IP_RANGE}.1