version: '2'

services:

  nginx:
    image: nginx:latest
    container_name: ${PROJECT_NAME}-nginx
    volumes:
    # 默认配置
      - ./config/certs:/etc/nginx/certs
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./config/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
    # 本项目的配置
      - ./config/nginx/conf.d/${PROJECT_NAME}.conf:/etc/nginx/conf.d/${PROJECT_NAME}.conf
      - ./config/nginx/conf.d/${PROJECT_NAME}:/etc/nginx/conf.d/${PROJECT_NAME}
      - ./code/nginx:/data/${PROJECT_NAME}/code/nginx
    environment:
      - TZ=Asia/Shanghai
    depends_on:
      - springboot
      - tomcat
    ports:
     - 80:80
    restart: always
    logging:
      # limit logs retained on host to 25MB
      driver: "json-file"
      options:
        max-size: "500k"
        max-file: "50"
    networks:
      - frontend_network

  springboot:
    image: java:openjdk-8-jre-alpine
    container_name: ${PROJECT_NAME}-springboot
    restart: "on-failure:3"
    depends_on:
      - mysql-user
    environment:
      - TZ=Asia/Shanghai
    volumes:
      - ./code/springboot:/data/${PROJECT_NAME}/code/springboot
    # TODO 修改jar文件名
    entrypoint: java -jar /data/${PROJECT_NAME}/code/springboot/hello-world-0.1.0.jar
    logging:
      # limit logs retained on host to 25MB
      driver: "json-file"
      options:
        max-size: "500k"
        max-file: "50"
    networks:
      - frontend_network
      - default

  tomcat:
    image: tomcat:8-jre8-alpine
    container_name: ${PROJECT_NAME}-tomcat
    volumes:
      - ./code/tomcat:/usr/local/tomcat/webapps
    environment:
      - TZ=Asia/Shanghai
      - TOMCAT_USERNAME=${APP_ADMIN_USERNAME}
      - TOMCAT_PASSWORD=${APP_ADMIN_PASSWORD}
    depends_on:
      - mysql-user
    logging:
      # limit logs retained on host to 25MB
      driver: "json-file"
      options:
        max-size: "500k"
        max-file: "50"
    networks:
      - frontend_network
      - default

  mysql-app:
    image: mysql:8
    container_name: ${PROJECT_NAME}-mysql-app
    restart: "always"
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - mysql_app_volume:/var/lib/mysql
      - ./config/mysql_app_init/0-createdb.sql:/docker-entrypoint-initdb.d/0-createdb.sql
      - ./config/mysql_app_init/9-grant-privileges.sql:/docker-entrypoint-initdb.d/9-grant-privileges.sql
    logging:
      # limit logs retained on host to 25MB
      driver: "json-file"
      options:
        max-size: "500k"
        max-file: "50"
    networks:
      default:
        ipv4_address: ${IP_RANGE}.200

  mysql-user:
    image: mysql:8
    container_name: ${PROJECT_NAME}-mysql-user
    restart: "always"
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - mysql_user_volume:/var/lib/mysql
      - ./config/mysql_user_init/0-createdb.sql:/docker-entrypoint-initdb.d/0-createdb.sql
      - ./config/mysql_user_init/9-grant-privileges.sql:/docker-entrypoint-initdb.d/9-grant-privileges.sql
    logging:
      # limit logs retained on host to 25MB
      driver: "json-file"
      options:
        max-size: "500k"
        max-file: "50"
    networks:
      default:
        ipv4_address: ${IP_RANGE}.201

  init:
    image: philiphuang/config-injector:latest
    volumes:
      - ./.env:/.env
      - ./config/mysql_init_template:/input/mysql_user_init
      - ./config/mysql_init_template:/input/mysql_app_init
      - ./config/mysql_user_init:/output/mysql_user_init
      - ./config/mysql_app_init:/output/mysql_app_init

  backups:
    image: blacklabelops/volumerize:1.6
    container_name: ${PROJECT_NAME}-backups
    environment:
      - TZ=Asia/Shanghai
      - DEBUG=true
      - VOLUMERIZE_SOURCE=/source
      - VOLUMERIZE_TARGET=file:///backup
      - VOLUMERIZE_JOBBER_TIME=* 5 2 * * *
      - VOLUMERIZE_FULL_IF_OLDER_THAN=3D
      - VOLUMERIZE_CONTAINERS=${PROJECT_NAME}-nginx
      - MYSQL_USERNAME=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_HOST=${MYSQL_HOST}
      # 多个数据库之间用空格分隔
      - 'MYSQL_DATABASE=${MYSQL_DATABASE}'
      - MYSQL_DUMP_PATH=mysql-backup
      - DAYS_TO_KEEP_OLD_FILE=5
      - 'REMOVE_OLD_FILE_IN_DIR=/source/mysql-backup /logs/mysql'
    volumes:
      # [volumerize用到的目录映射]
      - /var/run/docker.sock:/var/run/docker.sock
      - cache_volume:/volumerize-cache
      # 备份前运行的脚本
      - ./code/backups/preexecute:/preexecute
      # TODO：备份到哪里
      - ./backup/${PROJECT_NAME}-backup/:/backup

      # [需要备份的文件]
      # mysql备份，保留最近x天的文件，x=DAYS_TO_KEEP_OLD_FILE
      - ./backup/mysql-backup:/source/mysql-backup
      # 以及其他目录都挂在/source目录下

      # [需要清理旧文件的目录]
      - ./logs/mysql:/logs/mysql
    networks:
      - default

volumes:
  cache_volume:
  mysql_app_volume:
  mysql_user_volume:

networks:
  frontend_network:
    external: false
  default:
      driver: bridge
      ipam:
        config:
          - subnet: ${IP_RANGE}.0/24